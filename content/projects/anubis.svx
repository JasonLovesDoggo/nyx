---
title: Anubis
description: Weighs the soul of incoming HTTP requests using proof-of-work to stop AI crawlers and other malicious bots.
date: 2025-03-01
published: true
featured: true
imageUrl: /projects/anubis.webp
imageAlt: The Anubis GitHub repository
tags:
  - golang
  - security
  - ai
  - anti-bot
  - defense
  - proof-of-work
links:
  - text: GitHub
    url: https://github.com/TecharoHQ/anubis
  - text: Docs & Demo
    url: https://anubis.techaro.lol
    icon: docs
---
# Anubis

Anubis is a security middleware designed to protect web services by implementing a Proof-of-Work (PoW) challenge. It effectively "weighs the soul" of incoming HTTP requests, deterring automated bots, AI crawlers, and scrapers while allowing legitimate users through.

Built with Go, Anubis integrates into web applications to present a computational challenge that is trivial for human users but resource-intensive for bots attempting to access the service at scale. This acts as a significant barrier against unwanted automated traffic.

## Key Features

*   **Proof-of-Work Defense:** Utilizes computational challenges to verify clients.
*   **Bot Mitigation:** Effectively stops common bots, scrapers, and AI crawlers.
*   **Configurable:** Allows tuning of difficulty and other parameters.
*   **Integration:** Designed to work as middleware in Go web applications.
*   **Open Graph Passthrough:** Enables social previews of protected resources without exempting each scraper individually.
*   **Customizable Policies:** Define rules to allow, deny, or challenge incoming requests based on path and user agent.

## Implementation Options

Anubis can be deployed in various ways:

- **Native Packages:** Available for Debian-based (apt), Red Hat-based (rpm), and as a tarball for other systems.
- **Docker:** Ready-to-use container images for quick deployment.
- **Kubernetes:** Helm charts for orchestrated environments.

## Algorithm Selection

Anubis offers two proof-of-work algorithms:

- **Fast:** Highly optimized JavaScript that runs as efficiently as possible.
- **Slow:** Intentionally inefficient JavaScript that wastes time and memory, perfect for known malicious clients.

## Real-World Applications

Anubis is particularly effective for protecting:

- Git repositories (Gitea/Forgejo)
- Content management systems
- Any web application vulnerable to scraping or automated attacks

For detailed usage, configuration options, and a live demo, please refer to the official [Anubis Documentation](https://anubis.techaro.lol/).


### Notable Installations

- https://wiki.archlinux.org/
- https://hydra.nixos.org/
- https://svnweb.freebsd.org/
- https://dev.haiku-os.org
- https://openwrt.org/
- https://gitlab.postmarketos.org/
- https://gitlab.gnome.org/
- https://source.puri.sm/
- https://git.enlightenment.org/
- https://git.lupancham.net/
- https://codeberg.org/
- https://gitlab.freedesktop.org/
- https://gitea.com/
- https://bugzilla.proxmox.com
- https://hosted.weblate.org/
- http://code.hackerspace.pl/
- https://trac.ffmpeg.org/
- https://bugs.winehq.org/
- https://wiki.dolphin-emu.org/
- https://xeiaso.net/
- https://scioly.org/
- https://www.cfaarchive.org/
- https://squirreljme.cc/

### The United Nations
	- https://policytoolbox.iiep.unesco.org/

### The Linux Foundation
	- https://git.kernel.org/
	- https://lore.kernel.org/

### Sourceware
	- https://sourceware.org/cgit
	- https://sourceware.org/glibc/wiki
	- https://builder.sourceware.org/testruns/
	- https://patchwork.sourceware.org/
	- https://gcc.gnu.org/bugzilla/
	- https://gcc.gnu.org/cgit

### hebis (Alliance of Hessian Libraries)
	- https://ubmr.hds.hebis.de/
	- https://tufind.hds.hebis.de/
	- https://karla.hds.hebis.de/
	- and many more (see https://www.hebis.de/dienste/hebis-discovery-system/)

### FreeCAD
	- https://forum.freecad.org/
	- https://wiki.freecad.org/

### ScummVM
	- https://bugs.scummvm.org/
	- https://forums.scummvm.org/
	- https://wiki.scummvm.org/